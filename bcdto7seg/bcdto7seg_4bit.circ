<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.8.0" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.8.0(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Pin">
      <a name="appearance" val="classic"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7"/>
  <lib desc="#Base" name="8"/>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11"/>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Poke Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool"/>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <sep/>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="1" name="NAND Gate"/>
    <tool lib="1" name="NOR Gate"/>
    <sep/>
    <tool lib="4" name="D Flip-Flop"/>
    <tool lib="4" name="Register"/>
  </toolbar>
  <circuit name="main">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="main"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="downloadBoard" val="BASYS3"/>
    <a name="simulationFrequency" val="1.0"/>
    <boardmap boardname="BASYS3">
      <mc key="/Input_bus_1" pmap="192_323_0,154_323_0,117_323_0,78_323_0"/>
      <mc key="/Output_bus_1" pmap="138_258_0,130_249_0,130_263_0,136_274_0,154_262_0,154_248_0,136_245_0"/>
      <mc key="/Output_bus_2" pmap="273_234_0,225_234_0,180_234_0,130_234_0"/>
    </boardmap>
    <comp lib="0" loc="(210,240)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_bus_1"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(540,240)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Output_bus_1"/>
      <a name="output" val="true"/>
      <a name="width" val="7"/>
    </comp>
    <comp lib="0" loc="(570,280)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Output_bus_2"/>
      <a name="output" val="true"/>
      <a name="width" val="4"/>
    </comp>
    <comp loc="(510,240)" name="bdcto7seg">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="bdcto7seg_1"/>
    </comp>
    <wire from="(210,240)" to="(290,240)"/>
    <wire from="(510,240)" to="(540,240)"/>
    <wire from="(510,260)" to="(570,260)"/>
    <wire from="(570,260)" to="(570,280)"/>
  </circuit>
  <vhdl name="bdcto7seg">LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;
ENTITY bdcto7seg IS&#13;
  PORT (&#13;
	A : in std_logic_vector(3 downto 0);
	B: out std_logic_vector(6 downto 0);
	LD : out std_logic_vector(3 downto 0)
	
    );&#13;
END bdcto7seg;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
--------------------------------------------------------------------------------&#13;
&#13;
ARCHITECTURE comportm OF bdcto7seg IS&#13;

BEGIN&#13;
	LD &lt;= "0001";
&#13;	process(A)
	begin
		case A is
			when "0000" =&gt; B &lt;= "1111110";
			when "0001" =&gt; B &lt;= "0110000";
			when "0010" =&gt; B &lt;= "1101101";
			when "0011" =&gt; B &lt;= "1111001";
			when "0100" =&gt; B &lt;= "0110011";
			when "0101" =&gt; B &lt;= "1011011";
			when "0110" =&gt; B &lt;= "1011111";
			when "0111" =&gt; B &lt;= "1110000";

			when "1000" =&gt; B &lt;= "1111111";
			when "1001" =&gt; B &lt;= "1111011";
			when "1010" =&gt; B &lt;= "1110111";
			when "1011" =&gt; B &lt;= "0011111";
			when "1100" =&gt; B &lt;= "1001110";
			when "1101" =&gt; B &lt;= "0111101";
			when "1110" =&gt; B &lt;= "1001111";
			when "1111" =&gt; B &lt;= "1000111";
			when others =&gt; B &lt;= "0000000";
		end case;
&#13;	end process;
END comportm;&#13;
</vhdl>
</project>
